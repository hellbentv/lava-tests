#!/usr/bin/env bash
#
# getlava deployment script for LAVA job submission
# Version v0.1.0
# More info: 
#
# Copyright (c) 2014 Linaro, LTD
# http://www.linaro.org
#
#

### Configuration
#####################################################################

domain=$1
playbook=http://git.linaro.org/people/alan.bennett/getlava
workdir=ansible-deploy

 
### Functions
#####################################################################

### Runtime
#####################################################################

# Download playbook into a persistent location
mkdir -p /opt; cd /opt
git clone ${playbook} ${workdir}
mkdir -p /opt/${workdir}/ansible
cd ${workdir}/ansible

#execute playbook
echo "### Executing ansible-playbook"
## ansible-playbook -c local site.yml

#manual site deployment
cd /root
git clone http://github.com/hellbentv/nginx-docker

#install docker
echo 'Install Docker'
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9
sh -c "echo deb http://get.docker.io/ubuntu docker main\
> /etc/apt/sources.list.d/docker.list"
apt-get update
apt-get -y install lxc-docker
echo 'Docker installed - '`docker --version`

#build the Docker image
echo 'Build nginx Dockerimage'
cd nginx-docker
docker build -t nginx_img_1 .
cd /root
echo 'Docker image created - '
docker ps

#get site specific content
echo 'Get web content'
cd /root 
git clone http://git.linaro.org/people/alan.bennett/getlava

#run nginx and reference the site specific content
echo 'Execute docker image'
docker run -d -v /root/nginx-docker/nginx.conf:/etc/nginx/sites.enabled/default \
    -v /root/getlava/www:/usr/share/nginx/html -p 80:80 -i nginx_img_1

#added to wait for the services to start
sleep 2

curl http://localhost:80
curl -o test http://localhost:80
lava-test-case http-server-verification --shell grep Automated test
